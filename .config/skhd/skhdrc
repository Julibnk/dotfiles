#!/bin/bash

lalt - b : open_and_move "Brave Browser"
lalt - t : open_and_move "Ghostty"
lalt - m : open_and_move "Microsoft Outlook"
lalt - s : open_and_move "Spotify"
# lalt - n : open_and_move " obsidian://open?vault=personal"
lalt - p : open "obsidian://open?vault=personal" && yabai -m window --focus "$(yabai -m query --windows | jq ".[] | select(.app==\"Obsidian\").id")" ""
lalt - n : open "obsidian://open?vault=work" && yabai -m window --focus "$(yabai -m query --windows | jq ".[] | select(.app==\"Obsidian\").id")" ""
lalt - c : open_and_move "Microsoft Teams"
lalt - d : open_and_move "DBeaver"

lalt - n : yabai -m window --focus next
lalt - p : yabai -m window --focus prev

# Window management
# lalt - h : yabai -m window --focus west
# lalt - j : yabai -m window --focus south
# lalt - k : yabai -m window --focus north
# lalt - l : yabai -m window --focus east

# Move between spaces
lalt - 1 : yabai -m space --focus  1
lalt - 2 : yabai -m space --focus  2
lalt - 3 : yabai -m space --focus  3
lalt - 4 : yabai -m space --focus  4
lalt - 5 : yabai -m space --focus  5
lalt - 6 : yabai -m space --focus  6
lalt - 7 : yabai -m space --focus  7
lalt - 8 : yabai -m space --focus  8
lalt - 9 : yabai -m space --focus  9
lalt - 0 : yabai -m space --focus  10

# Change layout
#Send to external window
lalt - x : yabai -m window --space 1; yabai -m space --focus 1 
lalt - e : yabai -m window --space 8; yabai -m space --focus 8 
lalt - i : hook_back

# toggle window zoom
# alt - d : yabai -m window --toggle zoom-parent
lalt - z : yabai -m window --toggle zoom-fullscreen
lalt - r : yabai -m space --rotate 270
lalt - l : switch_yabai_layout
# lalt - - : yabai -m window --toggle split

 # yabai -m query --windows | jq 'map(select(.space == 2)) | first | .id'
# send window to desktop and follow focus
lalt + shift - 1 : yabai -m window --space  1; yabai -m space --focus 1;  
lalt + shift - 2 : yabai -m window --space  2; yabai -m space --focus 2;
lalt + shift - 3 : yabai -m window --space  3; yabai -m space --focus 3;
lalt + shift - 4 : yabai -m window --space  4; yabai -m space --focus 4;
lalt + shift - 5 : yabai -m window --space  5; yabai -m space --focus 5;
lalt + shift - 6 : yabai -m window --space  6; yabai -m space --focus 6;
lalt + shift - 7 : yabai -m window --space  7; yabai -m space --focus 7;
lalt + shift - 8 : yabai -m window --space  8; yabai -m space --focus 8;
lalt + shift - 9 : yabai -m window --space  9; yabai -m space --focus 9;
lalt + shift - 0 : yabai -m window --space  10; yabai -m space --focus 10;


# Disable cmd tab 
cmd - 0x30 : echo 'Get used to!!'


# ==========================================================================
#  DOCS
# ==========================================================================
#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#        be found at https://github.com/koekeishiya/skhd/issues/1
#
#        A hotkey is written according to the following rules:
#
#          hotkey       = <mode> '<' <action> | <action>
#
#          mode         = 'name of mode' | <mode> ',' <mode>
#
#          action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'
#                         <keysym> ':' <command>          | <keysym> '->' ':' <command>
#                         <keysym> ';' <mode>             | <keysym> '->' ';' <mode>
#
#          keysym       = <mod> '-' <key> | <key>
#
#          mod          = 'modifier keyword' | <mod> '+' <mod>
#
#          key          = <literal> | <keycode>
#
#          literal      = 'single letter or built-in keyword'
#
#          keycode      = 'apple keyboard kVK_<Key> values (0x3C)'
#
#          proc_map_lst = * <proc_map>
#
#          proc_map     = <string> ':' <command> | <string>     '~' |
#                         '*'      ':' <command> | '*'          '~'
#
#          string       = '"' 'sequence of characters' '"'
#
#          command      = command is executed through '$SHELL -c' and
#                         follows valid shell syntax. if the $SHELL environment
#                         variable is not set, it will default to '/bin/bash'.
#                                      when bash is used, the ';' delimeter can be specified
#                                      to chain commands.
#
#                                      to allow a command to extend into multiple lines,
#                                      prepend '\' at the end of the previous line.
#
#                                      an EOL character signifies the end of the bind.
#
#                       ->           = keypress is not consumed by skhd
#
#                       *            = matches every application not specified in <proc_map_lst>
#
#                       ~            = application is unbound and keypress is forwarded per usual, when specified in a <proc_map>
#
#  NOTE(koekeishiya): A mode is declared according to the following rules:
#
#                       mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#                                   '::' <name> '@'               | '::' <name>
#
#                       name      = desired name for this mode,
#
#                       @         = capture keypresses regardless of being bound to an action
#
#                       command   = command is executed through '$SHELL -c' and
#                                   follows valid shell syntax. if the $SHELL environment
#                                   variable is not set, it will default to '/bin/bash'.
#                                   when bash is used, the ';' delimeter can be specified
#                                   to chain commands.
#
#                                   to allow a command to extend into multiple lines,
#                                   prepend '\' at the end of the previous line.
#
#                                   an EOL character signifies the end of the bind.

# add an on_enter command to the default mode
# :: default : yabai -m config active_window_border_color 0xff775759
#
# defines a new mode 'test' with an on_enter command, that captures keypresses
# :: test @ : yabai -m config active_window_border_color 0xff24ccaa
#
# from 'default' mode, activate mode 'test'
# cmd - x ; test
#
# from 'test' mode, activate mode 'default'
# test < cmd - x ; default
#
# launch a new terminal instance when in either 'default' or 'test' mode
# default, test < cmd - return : open -na /Applications/Terminal.app

# application specific bindings
#
# cmd - n [
#     "kitty"       : echo "hello kitty"
#     *             : echo "hello everyone"
#     "qutebrowser" : echo "hello qutebrowser"
#     "terminal"    ~
#     "finder"      : false
# ]

# specify a file that should be included as an additional config-file.
# treated as an absolutepath if the filename begins with '/' otherwise
# the file is relative to the path of the config-file it was loaded from.
#
# .load "/Users/Koe/.config/partial_skhdrc"
# .load "partial_skhdrc"

# prevent skhd from monitoring events for specific applications.
#
# .blacklist [
#    "kitty"
#    "terminal"
#    "qutebrowser"
# ]

